✅ Day 5 – Terraform with AWS EC2 & S3: Project Deployment
__________________________________________________________

➡️ Goal: Launch an EC2 instance with a deployed app, and use an S3 bucket for storage, all using Terraform.

🧱 Step-by-Step Setup
_____________________
🔧 Step 1: Project Structure

terraform-ec2-s3-project/
├── main.tf
├── variables.tf
├── outputs.tf
└── provider.tf

📁 provider.tf – AWS Provider Setup

provider "aws" {
  region  = "us-east-1"
  profile = "default"  # or your configured profile
}

📁 variables.tf – Define Variables

variable "instance_type" {
  default = "t2.micro"
}

variable "ami_id" {
  description = "Amazon Linux 2 AMI"
  default     = "ami-0c02fb55956c7d316" # us-east-1
}

variable "bucket_name" {
  description = "Unique S3 Bucket Name"
  default     = "tf-demo-app-bucket-20250623"
}

📁 main.tf – EC2 + S3 Deployment

resource "aws_instance" "web" {
  ami           = var.ami_id
  instance_type = var.instance_type

  tags = {
    Name = "TF-Web-Server"
  }

  user_data = <<-EOF
              #!/bin/bash
              echo "Hello from Terraform EC2" > /var/www/html/index.html
              yum install -y httpd
              systemctl start httpd
              systemctl enable httpd
              EOF
}

resource "aws_s3_bucket" "app_bucket" {
  bucket = var.bucket_name
  force_destroy = true  # Deletes even if not empty

  tags = {
    Name        = "TF-App-Bucket"
    Environment = "Dev"
  }
}

📁 outputs.tf – Show Info

output "ec2_public_ip" {
  value = aws_instance.web.public_ip
}

output "s3_bucket_name" {
  value = aws_s3_bucket.app_bucket.bucket
}

🚀 Deploy
__________
terraform init
terraform validate
terraform plan
terraform apply

✅ What this does:
___________________
Resource	Description
____________________________________________________________
EC2 Instance	Launches a t2.micro server with Apache
S3 Bucket	Creates a globally unique bucket
user_data	Bootstraps the EC2 with a basic HTML page
force_destroy	Deletes bucket even if it contains data

🔍 Test the Deployment
______________________
Visit the EC2 public IP → You should see “Hello from Terraform EC2”
In AWS S3 console → Check your bucket exists

📦 Next Steps (Optional Enhancements)
_____________________________________
Upload sample file to S3 with aws_s3_object
Add Security Group to allow port 80
Tagging, Key Pairs, VPC/Subnet handling

===========================================================================//


